package bgu.dl.features.learning;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintStream;

public class test
{
	/*public static void main(String[] args) throws PyException
    {   
        try
        {
            PythonInterpreter.initialize(System.getProperties(), System.getProperties(), new String[0]);
            PythonInterpreter interp = new PythonInterpreter();
            interp.execfile("/home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/eclipse/bgu.learning/src/bgu/dl/features/learning/ss-py.py,1");
        }
        catch(Exception e)
        {
            System.out.println(e.toString());
            e.printStackTrace();
        }
    }*/
	public static void main(String a[]) throws IOException
	{
		/*	try {

			String prg = "import sys\nprint int(sys.argv[1]) + int(sys.argv[2])\n";
			BufferedWriter out = new BufferedWriter(new FileWriter("test1.py"));
			out.write(prg);
			out.close();
			int number1 = 10;
			int number2 = 32;
			// Process p = Runtime.getRuntime().exec("python test1.py "+number1+" "+number2);
			String[] command = {"python", "ss-py.py"};
			Process p = Runtime.getRuntime().exec("python ss-py.py");
			ProcessBuilder probuilder = new ProcessBuilder( command );
			Process p1 = probuilder.start();
			// Process p1 = Runtime.getRuntime().exec("python ss-py.py"); 

			BufferedReader reader = null;
			try {
				reader = new BufferedReader(new InputStreamReader(p1.getInputStream()));
				String line;
				while ((line = reader.readLine()) != null) {
					if (line.contains(searchFor)) {
						System.out.println(line);
					}
				}
			} finally {
				if (reader != null) {
					reader.close();
				}
			}
			// Writing each line to a file
			// System.setOut(new PrintStream(new BufferedOutputStream(new FileOutputStream("/home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/eclipse/bgu.learning/src/bgu/dl/features/learning/ss")), true));
			BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
			String line;
			while ((line = in.readLine()) != null) {
				System.out.println(line);
			}
		}
		catch(Exception e){}

		 */
		/*String[] str = {"python", 
				"/home/bgumodo1/Documents/Copy-IITM/Research-Edited/Fast-Downward/fast-downward.py", 
				"/home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/IPC-2/Blocks/Untyped/domain.pddl",
				"/home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/IPC-2/Blocks/Untyped/probBLOCKS-4-0.pddl",
				"--search",
		"\'lazy_greedy(ff())\'"};
		Process p1 = Runtime.getRuntime().exec(str);
		BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(p1.getOutputStream()));
		writer.write("shekhar22!");
		writer.newLine();
		writer.close();
		//Process p = Runtime.getRuntime().exec(str, null, null);
		ProcessBuilder probuilder = new ProcessBuilder( command );
		Process process = probuilder.start(); 
		BufferedReader in = new BufferedReader(new InputStreamReader(p1.getInputStream()));
		String line;
		while ((line = in.readLine()) != null) {
			System.out.println(line);
		}*/

		ProcessBuilder pb = new ProcessBuilder("sudo", "python", "/home/bgumodo1/Documents/Copy-IITM/Research-Edited/Fast-Downward/fast-downward.py /home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/IPC-2/Blocks/Untyped/domain.pddl /home/bgumodo1/Dropbox/Bgu-Files/bgu.dl.heuristic/IPC-2/Blocks/Untyped/probBLOCKS-4-0.pddl --search \"lazy_greedy(ff(), preferred=ff())\"");
		pb.redirectError();
		InputStream is = null;
		try {
			Process p = pb.start();
			is = p.getInputStream();
			StringBuilder output = new StringBuilder(80);
			int in = -1;
			while ((in = is.read()) != -1) {
				if (in != '\n') {
					output.append((char)in);
					// You will need to define PASSWORD_PROMPT
					String pass = "shekhar22!";
					if (pass.equals(output.toString())) {
						String text = JOptionPane.showInputDialog("Password");
						OutputStream os = p.getOutputStream();
						os.write(text.getBytes());
					}
				} else {
					System.out.println(output.toString());
					output.delete(0, output.length());
				}
			}
		} catch (IOException exp) {
			exp.printStackTrace();
		} finally {
			try {
				is.close();
			} catch (Exception e) {
			}
		}
	}
}
