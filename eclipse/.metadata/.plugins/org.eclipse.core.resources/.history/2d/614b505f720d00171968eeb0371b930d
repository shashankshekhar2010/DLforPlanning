<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="PLP-schemas"
    xmlns="PLP-schemas"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>

  <!-- MAIN ELEMENT AND TYPE-->
  <xs:element name="observe_plp" type="observe_plp_type" />

  <xs:complexType name="observe_plp_type">
    <xs:sequence minOccurs="0" maxOccurs="1">
      <xs:element name="parameters" type="params_wrapper_type" />
      <xs:element name="variables" type="vars_type" />
      <xs:element name="constants" type="constants_type" />
      <xs:element name="required_resources" type="required_resources_type" />
      <xs:element name="preconditions" type="conditions_type" />
      <xs:element name="concurrency_conditions" type="conditions_type" />
      <xs:element name="concurrent_modules" type="concurrent_modules_type" />
      <xs:element name="side_effects" type="side_effects_type" />
      <xs:element name="progress_measures" type="progress_measures_type" />
      <!-- SPECIFIC TO OBSERVE -->
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="observation_goal_condition" type="goal_condition_type" />
          <xs:element name="failure_to_observe_probability" type="probabilities_type" />
          <xs:choice minOccurs="0" maxOccurs="1">
	      	<xs:element name="failure_termination_condition" type="conditions_type" />
	      </xs:choice>
          <xs:element name="correct_condition_observation_probability" type="probabilities_type" />
        </xs:sequence>
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="observation_goal_parameter">
            <xs:complexType>
              <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:element name="param" type="param_base_type" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="failure_to_observe_probability" type="probabilities_type" />
          <xs:choice minOccurs="0" maxOccurs="1">
	      	<xs:element name="failure_termination_condition" type="conditions_type" />
	      </xs:choice>
          <xs:element name="correct_param_observation_probability" type="correct_continuous_type" />
        </xs:sequence>
      </xs:choice>
      <xs:element name="runtime_given_success" type="runtimes_type" />
      <xs:element name="runtime_given_failure" type="runtimes_type" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="version" type="xs:double" use="optional" />
    <xs:attribute name="glue_file_location" type="xs:string" use="optional" />
  </xs:complexType>
  <!-- END MAIN ELEMENT AND TYPE -->

  <xs:complexType name="params_wrapper_type">
    <xs:sequence minOccurs="0" maxOccurs="1">
      <xs:element name="execution_parameters" type="params_type" />
      <xs:element name="input_parameters" type="params_type" />
      <xs:element name="output_parameters" type="params_type" />
      <xs:element name="non_observable" type="params_type" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="params_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="param" type="param_type" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="param_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="field" type="field_type" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="read_frequency" type="xs:double" />
    <xs:attribute name="error_param" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="param_base_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="field" type="field_type" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="field_type">
    <xs:attribute name="value" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="vars_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="var">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice minOccurs="0" maxOccurs="1">
              <xs:element name="possible_range" type="range_type" />
              <xs:element name="possible_value">
                <xs:complexType>
                  <xs:attribute name="value" type="xs:string" use="required" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:sequence>
          <xs:attribute name="name" type="xs:string" use="required" />
          <xs:attribute name="type" type="variable_types" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="range_type">
    <xs:attribute name="min_value" type="xs:string" use="required" />
    <xs:attribute name="min_inclusive" type="xs:boolean" use="required" />
    <xs:attribute name="max_value" type="xs:string" use="required" />
    <xs:attribute name="max_inclusive" type="xs:boolean" use="required" />
  </xs:complexType>

  <xs:simpleType name="variable_types">
    <xs:restriction base="xs:string">
      <xs:enumeration value="boolean" />
      <xs:enumeration value="real" />
      <xs:enumeration value="integer" />
      <xs:enumeration value="string" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="constants_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="constant">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string" use="required" />
          <xs:attribute name="type" type="variable_types" />
          <xs:attribute name="value" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="required_resources_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="resource">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="status">
              <xs:complexType>
                <xs:attribute name="type" type="status_type_options" use="required" />
                <xs:attribute name="frequency" type="xs:double" />
                <xs:attribute name="duration" type="xs:double" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="name" type="xs:string" use="required" />
          <xs:attribute name="quantity" type="xs:double" use="optional" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="status_type_options">
    <xs:restriction base="xs:string">
      <xs:enumeration value="exclusive" />
      <xs:enumeration value="frequency" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="conditions_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="and_or_condition_type">
    <xs:sequence minOccurs="2" maxOccurs="unbounded">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="predicate_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="field" type="field_type" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="formula_condition_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="expression" type="simple_value_type" />
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="operator">
            <xs:complexType>
              <xs:attribute name="type" type="operator_type" />
            </xs:complexType>
          </xs:element>
          <xs:element name="expression" type="simple_value_type" />
        </xs:sequence>
        <xs:sequence minOccurs="1" maxOccurs="1">
          <xs:element name="inside_range">
            <xs:complexType>
              <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:element name="range" type="range_type" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="key_description" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="simple_value_type">
    <xs:attribute name="value" type="xs:string" use="required" />
  </xs:complexType>

  <xs:simpleType name="operator_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="=" />
      <xs:enumeration value="!=" />
      <xs:enumeration value="less" />
      <xs:enumeration value="less_equal" />
      <xs:enumeration value="greater" />
      <xs:enumeration value="greater_equal" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="not_condition_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="predicate_condition" type="predicate_type" />
      <xs:element name="forall_condition" type="forall_condition_type" />
      <xs:element name="exists_condition" type="exists_condition_type" />
      <xs:element name="AND" type="and_or_condition_type" />
      <xs:element name="OR" type="and_or_condition_type" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="forall_condition_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="param">
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="exists_condition_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="param">
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="concurrent_modules_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="module">
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="concurrency_type" type="concurrency_type" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:element name="complete_mutex" />
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="concurrency_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="parallel" />
      <xs:enumeration value="mutex" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="side_effects_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="conditional_effect" type="conditional_effect_type" />
        <xs:element name="forall_effect" type="forall_effect_type" />
        <xs:element name="not_effect" type="not_effect_type" />
        <xs:element name="predicate_effect" type="predicate_type" />
        <xs:element name="assignment_effect" type="assignment_effect_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="forall_effect_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="param">
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_effect" type="predicate_type" />
        <xs:element name="assignment_effect" type="assignment_effect_type" />
        <xs:element name="not_effect" type="not_effect_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="assignment_effect_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="param" type="param_base_type" />
      <xs:element name="expression" type="simple_value_type" />
    </xs:sequence>
    <xs:attribute name="key_description" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="not_effect_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="predicate_effect" type="predicate_type" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="conditional_effect_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="forall_effect" type="forall_effect_type" />
        <xs:element name="not_effect" type="not_effect_type" />
        <xs:element name="predicate_effect" type="predicate_type" />
        <xs:element name="assignment_effect" type="assignment_effect_type" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="progress_measures_type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="progress_measure">
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="predicate_condition" type="predicate_type" />
            <xs:element name="formula_condition" type="formula_condition_type" />
            <xs:element name="not_condition" type="not_condition_type" />
            <xs:element name="forall_condition" type="forall_condition_type" />
            <xs:element name="exists_condition" type="exists_condition_type" />
            <xs:element name="AND" type="and_or_condition_type" />
            <xs:element name="OR" type="and_or_condition_type" />
          </xs:choice>
          <xs:attribute name="frequency" type="xs:double" use="required" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- NEXT TYPES ARE SPECIFIC FOR OBSERVE -->

  <xs:complexType name="goal_condition_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="predicate_condition" type="predicate_type" />
      <xs:element name="formula_condition" type="formula_condition_type" />
      <xs:element name="not_condition" type="not_condition_type" />
      <xs:element name="forall_condition" type="forall_condition_type" />
      <xs:element name="exists_condition" type="exists_condition_type" />
      <xs:element name="AND" type="and_or_condition_type" />
      <xs:element name="OR" type="and_or_condition_type" />
    </xs:choice>
    <xs:attribute name="result_parameter_name" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="probabilities_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="conditional_probability" type="conditional_probability_type" />
      </xs:sequence>
      <xs:element name="probability" type="simple_value_type" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="correct_continuous_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="probability_given_observed_value" type="probabilities_type" />
      <xs:sequence minOccurs="1" maxOccurs="1">
        <xs:element name="confidence_interval">
          <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="1">
              <xs:element name="lower_bound">
                <xs:complexType>
                  <xs:attribute name="value" type="xs:double" use="required" />
                  <xs:attribute name="inclusive" type="xs:boolean" use="required" />
                </xs:complexType>
              </xs:element>
              <xs:element name="upper_bound">
                <xs:complexType>
                  <xs:attribute name="value" type="xs:double" use="required" />
                  <xs:attribute name="inclusive" type="xs:boolean" use="required" />
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="confidence_level">
          <xs:complexType>
            <xs:attribute name="value">
              <xs:simpleType>
                <xs:restriction base="xs:double">
                  <xs:minInclusive value="0" />
                  <xs:maxInclusive value="1" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="conditional_probability_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
      <xs:element name="probability" type="simple_value_type" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="runtimes_type">
    <xs:choice>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="conditional_distribution" type="conditional_distribution_type" />
      </xs:sequence>
      <xs:element name="distribution" type="distribution_type" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="conditional_distribution_type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="predicate_condition" type="predicate_type" />
        <xs:element name="formula_condition" type="formula_condition_type" />
        <xs:element name="not_condition" type="not_condition_type" />
        <xs:element name="forall_condition" type="forall_condition_type" />
        <xs:element name="exists_condition" type="exists_condition_type" />
        <xs:element name="AND" type="and_or_condition_type" />
        <xs:element name="OR" type="and_or_condition_type" />
      </xs:choice>
      <xs:element name="distribution" type="distribution_type" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="distribution_type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="uniform">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="lower_bound" type="simple_value_type" />
            <xs:element name="upper_bound" type="simple_value_type" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="normal">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="mean" type="simple_value_type" />
            <xs:element name="variance" type="simple_value_type" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="gamma">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="k-shape" type="simple_value_type" />
            <xs:element name="&#920;-scale" type="simple_value_type" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="exp">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="&#955;-rate" type="simple_value_type" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="other_dist">
        <xs:complexType>
          <xs:attribute name="description" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

</xs:schema>